ARG NVIDIA_IMAGE_VERSION=1.4
FROM registry.redhat.io/rhelai1/bootc-nvidia-rhel9:${NVIDIA_IMAGE_VERSION}

COPY override.conf /etc/systemd/system/bootc-generic-growpart.service.d/override.conf

RUN dnf install -y gcc g++ git libevent-devel hwloc hwloc-devel libfabric-devel ucx-devel wget make gcc pmix-devel rdma-core perftest zlib-devel libibverbs-utils

RUN echo -e "* soft memlock unlimited\n* hard memlock unlimited" >> /etc/security/limits.conf
RUN echo "ulimit -l unlimited" > /etc/profile.d/ulimit.sh


RUN wget https://download.open-mpi.org/release/open-mpi/v5.0/openmpi-5.0.5.tar.gz
RUN tar xvf openmpi-5.0.5.tar.gz
RUN OVERLAY_ID=$(find /usr/lib/containers/storage/overlay -name cuda.h | head -n 1 | awk -F'/' '{print $7}') &&  CUDA_HOME=/usr/lib/containers/storage/overlay/$OVERLAY_ID/diff/usr/local/cuda-12.4 &&  cd openmpi-5.0.5 && ./configure --prefix=/opt/openmpi    --enable-mpi-ext=cuda    --with-cuda=$CUDA_HOME    --with-cuda-libdir=/usr/local/cuda/lib64    --with-ucx --with-libfabric --enable-builtin-atomics    --without-cma --with-libevent=external    --with-hwloc=external --disable-silent-rules    --enable-ipv6 --with-devel-headers    --with-slurm --with-sge --without-tm --with-zlib    --enable-heterogeneous 2>&1 | tee config.out && make -j32 &&  make install
ENV PATH=/opt/openmpi/bin/:$PATH
ENV LD_LIBRARY_PATH=/opt/openmpi/lib/:$LD_LIBRARY_PATH

RUN git clone https://github.com/NVIDIA/nccl.git
RUN OVERLAY_ID=$(find /usr/lib/containers/storage/overlay -name cuda.h | head -n 1 | awk -F'/' '{print $7}') &&  CUDA_HOME=/usr/lib/containers/storage/overlay/$OVERLAY_ID/diff/usr/local/cuda-12.4 &&  cd nccl && make -j16 src.build  CUDA_HOME=$CUDA_HOME && make install PREFIX=/opt/nccl CUDA_HOME=$CUDA_HOME

ENV LD_LIBRARY_PATH=/opt/nccl/lib/:$LD_LIBRARY_PATH

RUN git clone https://github.com/NVIDIA/nccl-tests.git
RUN OVERLAY_ID=$(find /usr/lib/containers/storage/overlay -name cuda.h | head -n 1 | awk -F'/' '{print $7}') &&  CUDA_HOME=/usr/lib/containers/storage/overlay/$OVERLAY_ID/diff/usr/local/cuda-12.4 &&   cd nccl-tests && make BUILDDIR=/opt/nccl-tests -j16 MPI=1 MPI_HOME=/opt/openmpi NCCL_HOME=/opt/nccl CUDA_HOME=$CUDA_HOME

RUN rm -rf openmpi-5.0.5
RUN rm openmpi-5.0.5.tar.gz
RUN rm -rf nccl
RUN rm -rf nccl-test

RUN rpm --import https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
RUN dnf install -y 'dnf-command(config-manager)'
RUN dnf config-manager --add-repo "https://developer.download.nvidia.com/devtools/repos/rhel$(source /etc/os-release; echo ${VERSION_ID%%.*})/$(rpm --eval '%{_arch}' | sed s/aarch/arm/)/"
RUN dnf install -y nsight-systems-cli

RUN OVERLAY_ID=$(find /usr/lib/containers/storage/overlay -name python3.11 | head -n 1 | awk -F'/' '{print $7}') && \
    LIB_PATH="/usr/lib/containers/storage/overlay/${OVERLAY_ID}/diff/usr/lib" && \
    LIB64_PATH="/usr/lib/containers/storage/overlay/${OVERLAY_ID}/diff/usr/lib64" && \
    BIN_PATH="/usr/lib/containers/storage/overlay/${OVERLAY_ID}/diff/usr/bin" && \
    echo "export PATH=${PATH}:${BIN_PATH}" >> /etc/profile.d/user-env.sh && \
    echo "export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIB_PATH}:${LIB64_PATH}" >> /etc/profile.d/user-env.sh

# DOCA networking (optional)
RUN dnf remove -y rdma-core perftest
RUN dnf install -y cmake boost-devel
RUN curl -O https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm \
 && rpm -Uvh epel-release-latest-9.noarch.rpm \
 && rm -f epel-release-latest-9.noarch.rpm
RUN dnf install -y libunwind
RUN wget https://www.mellanox.com/downloads/DOCA/DOCA_v2.10.0/host/doca-host-2.10.0-093000_25.01_rhel94.x86_64.rpm
RUN rpm -i doca-host-2.10.0-093000_25.01_rhel94.x86_64.rpm
RUN dnf -y install doca-networking
RUN rm doca-host-2.10.0-093000_25.01_rhel94.x86_64.rpm